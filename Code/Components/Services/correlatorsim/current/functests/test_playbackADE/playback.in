#
# Correlator cycle time in seconds
#
playback.period = 5

#
# Telescope Operating Simulator Configuration
#
playback.tossim.ice.locator_host            = localhost
playback.tossim.ice.locator_port            = 4061
playback.tossim.icestorm.topicmanager       = IceStorm/TopicManager@IceStorm.TopicManager
playback.tossim.icestorm.topic              = metadata

# Simulate random failures to send metadata message. A value of of 0.0
# results in no failures, while 1.0 results in all sends failing.
# (Default: 0.0)
#playback.tossim.random_metadata_send_fail   = 0.1

#
# Correlator Simulator
#
# n_shelves = MPI processes - 1
# At the moment, keep this value to 1
playback.corrsim.n_shelves                  = 1

# Correlator Shelf 1
playback.corrsim.shelf1.dataset             = ../../dataset/beta1.ms
playback.corrsim.shelf1.out.hostname        = localhost
playback.corrsim.shelf1.out.port            = 3001

# Correlator Shelf 2
playback.corrsim.shelf2.dataset             = ../../dataset/beta2.ms
playback.corrsim.shelf2.out.hostname        = localhost
playback.corrsim.shelf2.out.port            = 3001

# Correlator antenna count:
# 1 (default) to 36 (max for ASKAP)
playback.corrsim.n_antennas                 = 36

# Correlator coarse channel count
# Ideally 304 (default), but current hardware is limited at 300
playback.corrsim.n_coarse_channels          = 300

# Correlator division of coarse channel into fine channel
# Default: 54
playback.corrsim.n_channel_subdivision      = 54

# Correlator coarse channel bandwidth (Hertz)
# Default: 1 MHz
playback.corrsim.coarse_channel_bandwidth   = 1000000

# Correlator source of visibility data. Values:
# zero (default)    : all zero, no need to provide any data
# TO ADD LATER:
# inverse_expand    : inverse the data received from correlator
#                     and expand to fill all channels (like in BETA version)
playback.corrsim.visibility_source          = zero

# When the source of visibility is dataset that need to inverted
# and expanded, use the following:
# Correlator Shelf 1
playback.corrsim.shelf1.dataset             = ../../dataset/beta1.ms
playback.corrsim.shelf1.out.hostname        = localhost
playback.corrsim.shelf1.out.port            = 3001
# Correlator Shelf 2
playback.corrsim.shelf2.dataset             = ../../dataset/beta2.ms
playback.corrsim.shelf2.out.hostname        = localhost
playback.corrsim.shelf2.out.port            = 3001

# A non-unity expansion factor allows a small input dataset to be used
# to produce a larger output data stream. For example simulating a
# small 304 channel (1MHz channels) dataset and using an expansion
# factor of 54 to get to a 16416 (18.5KHz channels) data stream.
# playback.corrsim.expansion_factor           = 54

# TO ADD LATER: Failure pattern (make sure repeatable, ie. not random)
#
# Failure in sending data for a given packet
# Simulate random failures to send VisChunk. A value of of 0.0 results in
# no failures, while 1.0 results in all sends failing.
# (Default: 0.0)
#playback.corrsim.random_vis_send_fail       = 0.0

# Delay in sending datagram (microsecond)
playback.corrsim.delay                      = 100

# NOTE
# - Unlike the BETA version, ADE version does not need explicit baseline 
#   mapping. Instead, it is sufficient to set the number of antennas.
#

// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

#ifndef COMPONENT_STATS_ODB_SQLITE_H
#define COMPONENT_STATS_ODB_SQLITE_H

// Begin prologue.
//
#include <odb/boost/version.hxx>
#if ODB_BOOST_VERSION != 2040000 // 2.4.0
#  error ODB and C++ compilers see different libodb-boost interface versions
#endif
#include <boost/shared_ptr.hpp>
#include <odb/boost/smart-ptr/pointer-traits.hxx>
#include <odb/boost/smart-ptr/wrapper-traits.hxx>
#include <odb/boost/date-time/sqlite/posix-time-traits.hxx>
//
// End prologue.

#include <odb/version.hxx>

#if (ODB_VERSION != 20400UL)
#error ODB runtime version mismatch
#endif

#include <odb/pre.hxx>

#include "ComponentStats.h"

#include "ContinuumComponent-odb-sqlite.h"
#include "DataSource-odb-sqlite.h"
#include "Polarisation-odb-sqlite.h"

#include "ComponentStats-odb.h"

#include <odb/details/buffer.hxx>

#include <odb/sqlite/version.hxx>
#include <odb/sqlite/forward.hxx>
#include <odb/sqlite/binding.hxx>
#include <odb/sqlite/sqlite-types.hxx>
#include <odb/sqlite/query.hxx>
#include <odb/sqlite/query-dynamic.hxx>

namespace odb
{
  // ComponentStats
  //
  template <>
  class access::view_traits_impl< ::askap::cp::sms::datamodel::ComponentStats, id_sqlite >:
    public access::view_traits< ::askap::cp::sms::datamodel::ComponentStats >
  {
    public:
    typedef access::view_traits_impl< ::askap::cp::sms::datamodel::ComponentStats, id_common > common_traits;

    struct image_type
    {
      // count
      //
      long long count_value;
      bool count_null;

      std::size_t version;
    };

    typedef sqlite::view_statements<view_type> statements_type;

    typedef sqlite::query_base query_base_type;
    struct query_columns;

    static const bool versioned = false;

    static bool
    grow (image_type&,
          bool*);

    static void
    bind (sqlite::bind*,
          image_type&);

    static void
    init (view_type&,
          const image_type&,
          database*);

    static const std::size_t column_count = 1UL;

    static query_base_type
    query_statement (const query_base_type&);

    static result<view_type>
    query (database&, const query_base_type&);

    static result<view_type>
    query (database&, const odb::query_base&);
  };

  // ComponentStats
  //
  struct access::view_traits_impl< ::askap::cp::sms::datamodel::ComponentStats, id_sqlite >::query_columns:
    odb::pointer_query_columns<
      ::askap::cp::sms::datamodel::ContinuumComponent,
      id_sqlite,
      odb::access::object_traits_impl< ::askap::cp::sms::datamodel::ContinuumComponent, id_sqlite > >
  {
  };
}

#include "ComponentStats-odb-sqlite.i"

#include <odb/post.hxx>

#endif // COMPONENT_STATS_ODB_SQLITE_H

// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

#ifndef COMPONENT_STATS_ODB_H
#define COMPONENT_STATS_ODB_H

// Begin prologue.
//
#include <odb/boost/version.hxx>
#if ODB_BOOST_VERSION != 2040000 // 2.4.0
#  error ODB and C++ compilers see different libodb-boost interface versions
#endif
#include <boost/shared_ptr.hpp>
#include <odb/boost/smart-ptr/pointer-traits.hxx>
#include <odb/boost/smart-ptr/wrapper-traits.hxx>
//
// End prologue.

#include <odb/version.hxx>

#if (ODB_VERSION != 20400UL)
#error ODB runtime version mismatch
#endif

#include <odb/pre.hxx>

#include "ComponentStats.h"

#include "ContinuumComponent-odb.h"
#include "DataSource-odb.h"
#include "Polarisation-odb.h"

#include <memory>
#include <cstddef>

#include <odb/core.hxx>
#include <odb/traits.hxx>
#include <odb/callback.hxx>
#include <odb/wrapper-traits.hxx>
#include <odb/pointer-traits.hxx>
#ifdef BOOST_TR1_MEMORY_HPP_INCLUDED
#  include <odb/tr1/wrapper-traits.hxx>
#  include <odb/tr1/pointer-traits.hxx>
#endif
#include <odb/container-traits.hxx>
#include <odb/no-op-cache-traits.hxx>
#include <odb/query-dynamic.hxx>
#include <odb/result.hxx>
#include <odb/view-image.hxx>
#include <odb/view-result.hxx>

#include <odb/details/unused.hxx>
#include <odb/details/shared-ptr.hxx>

namespace odb
{
  // ComponentStats
  //
  template <>
  struct class_traits< ::askap::cp::sms::datamodel::ComponentStats >
  {
    static const class_kind kind = class_view;
  };

  template <>
  class access::view_traits< ::askap::cp::sms::datamodel::ComponentStats >
  {
    public:
    typedef ::askap::cp::sms::datamodel::ComponentStats view_type;
    typedef ::boost::shared_ptr< ::askap::cp::sms::datamodel::ComponentStats > pointer_type;

    static void
    callback (database&, view_type&, callback_event);
  };

  template <>
  class access::view_traits_impl< ::askap::cp::sms::datamodel::ComponentStats, id_common >:
    public access::view_traits< ::askap::cp::sms::datamodel::ComponentStats >
  {
    public:
    typedef odb::query_base query_base_type;
    struct query_columns;

    struct function_table_type
    {
      result<view_type> (*query) (database&, const query_base_type&);
    };

    static const function_table_type* function_table[database_count];

    static result<view_type>
    query (database&, const query_base_type&);
  };

  // ComponentStats
  //
  struct access::view_traits_impl< ::askap::cp::sms::datamodel::ComponentStats, id_common >::query_columns:
    odb::pointer_query_columns<
      ::askap::cp::sms::datamodel::ContinuumComponent,
      id_common,
      odb::access::object_traits_impl< ::askap::cp::sms::datamodel::ContinuumComponent, id_common > >
  {
  };
}

#include "ComponentStats-odb.i"

#include <odb/post.hxx>

#endif // COMPONENT_STATS_ODB_H
